/*
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
*/

import java.io.*;
import java.util.*;

class Triangular_Pentagonal_And_Hexagonal {
	public static long triangle(long index) {	// calculates triangle number given index
		return index * (index + 1) / 2;
	}

	public static long pentagonal(long index) {	// calculates pentagonal number given index
		return index * (3 * index - 1) / 2;
	}

	public static long hexagonal(long index) {	// calculates hexagonal number given index
		return index * (2 * index - 1);
	}

	public static void main(String[] args) {
		long triangleIndex = 285 + 1;	// current value + 1
		long pentagonalIndex = 165;	// current value
		long hexagonalIndex = 143;	// current value

		long currentTriangle = triangle(triangleIndex);	// find initial triangle number
		long currentPentagonal = pentagonal(pentagonalIndex);	// find initial pentagonal number
		long currentHexagonal = hexagonal(hexagonalIndex);	// find initial hexagonal number

		// loop until all values are equal
		while(currentTriangle != currentPentagonal || currentTriangle != currentHexagonal) {
			if(currentTriangle < currentPentagonal || currentTriangle < currentHexagonal) {	// currentTriangle smaller
				triangleIndex++;
			} else {	// currentTriangle bigger
				if(currentTriangle > currentPentagonal) {	// pentagonal smaller than triangle
					pentagonalIndex++;
				}

				if(currentTriangle > currentHexagonal) {	// hexagonal smaller than triangle
					hexagonalIndex++;
				}
			}

			// calculate updated values
			currentTriangle = triangle(triangleIndex);
			currentPentagonal = pentagonal(pentagonalIndex);
			currentHexagonal = hexagonal(hexagonalIndex);
		}

		System.out.println("The next triangle number after 40755 that is also pentagonal and hexagonal is: " + currentTriangle);
	}
}